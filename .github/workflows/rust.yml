name: Rust

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  find-contracts: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs
        run: echo "::set-output name=dir::$(find ./contracts -name Cargo.toml | jq -R -s -c 'split("\n")[:-1]')"

  build-contracts:
    runs-on: ubuntu-latest
    needs: [find-contracts] # Depends on previous job
    strategy:
      matrix:
        dir: ${{fromJson(needs.find-contracts.outputs.dir)}} # List matrix strategy from directories dynamically
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --target wasm32-unknown-unknown --manifest-path=${{matrix.dir}}
        
  build-schemas:
    runs-on: ubuntu-latest
    needs: [find-contracts]
    strategy:
      matrix:
        dir: ${{fromJson(needs.find-contracts.outputs.dir)}}
    steps:
      - run: pwd
      - id: set-contract
        run: echo "::set-output name=contract::$(echo ${{matrix.dir}} | rev | cut -d'/' -f 2- | rev)"
      - run: |
          cd ${{steps.set-contract.outputs.contract}}
          pwd
      # - uses: actions/checkout@v3
      # - uses: actions-rs/cargo@v1.0.3
      #   with:
      #     command: schema
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - run: npm install -g @adobe/jsonschema2md
      # - run: jsonschema2md -d ${{matrix.dir}/schemas} -o ${{matrix.dir}/docs}

  find-packages: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs
        run: echo "::set-output name=dir::$(find ./packages/ -name Cargo.toml | jq -R -s -c 'split("\n")[:-1]')"

  build-packages:
    runs-on: ubuntu-latest
    needs: [find-packages] # Depends on previous job
    strategy:
      matrix:
        dir: ${{fromJson(needs.find-packages.outputs.dir)}} # List matrix strategy from directories dynamically
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: check
          
  test-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --manifest-path=Cargo.toml

